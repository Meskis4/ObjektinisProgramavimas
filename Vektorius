#include <iostream>
#include <iomanip>
#include <algorithm>
#include <vector>

using namespace std;

struct Studentas {
    string vardas;
    string pavarde;
    int n;
    int egz;
    vector<int> nd;
    double vid;
    double galut;
    double medi;
    double pasirinkimas;
};

double Mediana(vector<int>& mas) {
    sort(mas.begin(), mas.end());

    if (mas.size() % 2 == 0) {
        double vidur1 = mas[mas.size() / 2 - 1];
        double vidur2 = mas[mas.size() / 2];
        return double((vidur1 + vidur2) / 2.0);
    }
    else {
        return double(mas[mas.size() / 2]);
    }
}

const int s_kiek = 3;

int main()
{
    Studentas S[s_kiek];

    for (int i = 0; i < s_kiek; i++) {
        S[i].pasirinkimas = 0;
        cout << "Iveskite savo varda: "; cin >> S[i].vardas;
        cout << "Iveskite savo pavarde: "; cin >> S[i].pavarde;
        cout << "Iveskite egzamino bala: "; cin >> S[i].egz;
        while (S[i].pasirinkimas != 1 || S[i].pasirinkimas != 2) {
            cout << "----------------------------------" << endl;
            cout << "Pasirinktie galutinio balo skaiciavimo metoda: " << endl;
            cout << "1. Skaiciuoti naudojant vidurki" << endl;
            cout << "2. Skaiciuoti naudojant mediana" << endl;
            cout << "Jusu pasirinkimas: "; cin >> S[i].pasirinkimas;
            cout << "----------------------------------" << endl;
            if (S[i].pasirinkimas != 1 && S[i].pasirinkimas != 2) {
                cout << "Netinkamas pasirinkimas!" << endl;
            }
            else break;
        }
        cout << "Iveskite atliktu namu darbu skaiciu: "; cin >> S[i].n;
        S[i].nd.resize(S[i].n);
        int paz = 0;
        for (int j = 0; j < S[i].n; j++) {
            cout << "Iveskite pazymi: "; cin >> S[i].nd[j];
            paz += S[i].nd[j];
        }
        if (S[i].pasirinkimas == 1) {
            S[i].vid = double(paz) / S[i].n;
            S[i].galut = 0.4 * S[i].vid + 0.6 * S[i].egz;
        }
        else {
            S[i].medi = Mediana(S[i].nd);
            S[i].galut = 0.4 * S[i].medi + 0.6 * S[i].egz;
        }
        cout << "*******************************" << endl;
    }
    cout << left << setw(15) << "Pavarde" << setw(15) << "Vardas" << setw(20) << "Galutinis (Vid.)  /" << setw(20) << "Galutinis (Med.)" << endl;
    cout << setfill('-') << setw(68) << "" << setfill(' ') << endl;
    for (int i = 0; i < s_kiek; i++) {
        if (S[i].pasirinkimas == 1) {
            cout << left << setw(15) << S[i].pavarde << setw(15) << S[i].vardas << setw(20) << fixed << setprecision(2) << S[i].galut << endl;
        }
        else {
            cout << left << setw(15) << S[i].pavarde << setw(15) << S[i].vardas << setw(20) << " " << setw(20) << fixed << setprecision(2) << S[i].galut << endl;
        }
    }
}
