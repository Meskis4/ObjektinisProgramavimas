#include <iostream>
#include <iomanip>
#include <algorithm>
#include <vector>
#include <random>

using namespace std;

struct Studentas {
    string vardas;
    string pavarde;
    int n;
    int egz;
    vector<int> nd;
    double vid;
    double galut;
    double medi;
    double pasirinkimas;
};

double Mediana(vector<int>& mas) {
    sort(mas.begin(), mas.end());

    if (mas.size() % 2 == 0) {
        double vidur1 = mas[mas.size() / 2 - 1];
        double vidur2 = mas[mas.size() / 2];
        return double((vidur1 + vidur2) / 2.0);
    }
    else {
        return double(mas[mas.size() / 2]);
    }
}

int main()
{

    vector<string> Vardai_v = { "Petras", "Jonas", "Paulius", "Saulius", "Martynas", "Kornelijus", "Adomas", "Lukas", "Marius", "Kazimieras", "Dovydas", "Mantas", "Arnas", "DÅ¾iugas" };
    vector<string> Vardai_m = { "Eva", "Paulina", "Sofija", "Gintare", "Skaiste", "Marija", "Lukrecija", "Kornelija", "Egle", "Kamile", "Auguste", "Meda", "Ruta" };
    vector<string> Pavardes_v = { "Kazlauskas", "Vasiliauskas", "Petrauskas", "Paulauskas", "Urbonas", "Adomaitis", "Sadauskas", "Vaitkus", "Jankauskas", "Rimkus" };
    vector<string> Pavardes_m = { "Kazlauskaite", "Vasiliauskiene", "Paulauskyte", "Vaitkute", "Jankauskaite", "Rimkute", "Adomaitiene", "Petrauskyte" };
    vector<Studentas> studentai;

    cout << "******************************" << endl;
    cout << "Duomenu uzpildymo budas" << endl;
    cout << "1. Uzpildyti ranka" << endl;
    cout << "2. Uzpildyti pazymius automatiskai" << endl;
    cout << "3. Uzpildyti varda, pavarde bei pazymius automatiskai" << endl;
    int budas;
    cout << "------------------------------" << endl;
    cout << "Jusu pasirinkimas: "; cin >> budas;
    
    // Pildymas ranka
    if (budas == 1) {
        while (true) {
            bool loop = false;
            Studentas S;
            S.pasirinkimas = 0;
            cout << "Iveskite savo varda: "; cin >> S.vardas;
            cout << "Iveskite savo pavarde: "; cin >> S.pavarde;
            cout << "Iveskite egzamino bala: "; cin >> S.egz;
            while (S.pasirinkimas != 1 || S.pasirinkimas != 2) {
                cout << "----------------------------------" << endl;
                cout << "Pasirinktie galutinio balo skaiciavimo metoda: " << endl;
                cout << "1. Skaiciuoti naudojant vidurki" << endl;
                cout << "2. Skaiciuoti naudojant mediana" << endl;
                cout << "Jusu pasirinkimas: "; cin >> S.pasirinkimas;
                cout << "----------------------------------" << endl;
                if (S.pasirinkimas != 1 && S.pasirinkimas != 2) {
                    cout << "Netinkamas pasirinkimas!" << endl;
                }
                else break;
            }
            cout << "Iveskite atliktu namu darbu skaiciu: "; cin >> S.n;
            S.nd.resize(S.n);
            int paz = 0;
            for (int j = 0; j < S.n; j++) {
                cout << "Iveskite pazymi: "; cin >> S.nd[j];
                paz += S.nd[j];
            }
            if (S.pasirinkimas == 1) {
                S.vid = double(paz) / S.n;
                S.galut = 0.4 * S.vid + 0.6 * S.egz;
            }
            else {
                S.medi = Mediana(S.nd);
                S.galut = 0.4 * S.medi + 0.6 * S.egz;
            }
            cout << "*******************************" << endl;
            studentai.push_back(S);
            int sk;
            cout << "0. Baigti" << endl;
            cout << "1. Testi" << endl;
            cin >> sk;
            if (sk == 0) {
                break;
            }
            else loop = true;
            }
        }
    
    // *************************************
    // Pazymiu automatinis pildymas

        if (budas == 2) {
            while (true) {
                bool loop = false;
                Studentas S;
                cout << "Iveskite savo varda: "; cin >> S.vardas;
                cout << "Iveskite savo pavarde: "; cin >> S.pavarde;

                random_device rd;
                mt19937 gen(rd());
                uniform_int_distribution<int> distribution(1, 10);
                S.egz = distribution(gen);
                while (S.pasirinkimas != 1 || S.pasirinkimas != 2) {
                    cout << "----------------------------------" << endl;
                    cout << "Pasirinktie galutinio balo skaiciavimo metoda: " << endl;
                    cout << "1. Skaiciuoti naudojant vidurki" << endl;
                    cout << "2. Skaiciuoti naudojant mediana" << endl;
                    cout << "Jusu pasirinkimas: "; cin >> S.pasirinkimas;
                    cout << "----------------------------------" << endl;
                    if (S.pasirinkimas != 1 && S.pasirinkimas != 2) {
                        cout << "Netinkamas pasirinkimas!" << endl;
                    }
                    else break;
                }
                cout << "Iveskite atliktu namu darbu skaiciu: "; cin >> S.n;
                S.nd.resize(S.n);
                int paz = 0;
                for (int j = 0; j < S.n; j++) {

                    S.nd[j] = distribution(gen);
                    paz += S.nd[j];
                }
                if (S.pasirinkimas == 1) {
                    S.vid = double(paz) / S.n;
                    S.galut = 0.4 * S.vid + 0.6 * S.egz;
                }
                else {
                    S.medi = Mediana(S.nd);
                    S.galut = 0.4 * S.medi + 0.6 * S.egz;
                }
                cout << "*******************************" << endl;
                studentai.push_back(S);
                int sk;
                cout << "0. Baigti" << endl;
                cout << "1. Testi" << endl;
                cin >> sk;
                if (sk == 0) {
                    break;
                }
                else loop = true; 
        }
        }

        //***************************************
        //Automatinis vardo bei pazymiu pildymas

        if (budas == 3) {
            while (true) {
                bool loop = false;
                Studentas S;

                random_device rd;
                mt19937 gen(rd());
                uniform_int_distribution<int> distribution(1, 10);
                uniform_int_distribution<int> lyties_num(0, 1); // 0 - vyras, 1 - moteris

                int lytis = lyties_num(gen);

                if (lytis == 0) {
                    S.vardas = Vardai_v[uniform_int_distribution<int>(0, Vardai_v.size() - 1)(gen)];
                    S.pavarde = Pavardes_v[uniform_int_distribution<int>(0, Pavardes_v.size() - 1)(gen)];
                }
                else {
                    S.vardas = Vardai_m[uniform_int_distribution<int>(0, Vardai_m.size() - 1)(gen)];
                    S.pavarde = Pavardes_m[uniform_int_distribution<int>(0, Pavardes_m.size() - 1)(gen)];
                }
                S.egz = distribution(gen);
                while (S.pasirinkimas != 1 || S.pasirinkimas != 2) {
                    cout << "----------------------------------" << endl;
                    cout << "Pasirinktie galutinio balo skaiciavimo metoda: " << endl;
                    cout << "1. Skaiciuoti naudojant vidurki" << endl;
                    cout << "2. Skaiciuoti naudojant mediana" << endl;
                    cout << "Jusu pasirinkimas: "; cin >> S.pasirinkimas;
                    cout << "----------------------------------" << endl;
                    if (S.pasirinkimas != 1 && S.pasirinkimas != 2) {
                        cout << "Netinkamas pasirinkimas!" << endl;
                    }
                    else break;
                }
                cout << "Iveskite atliktu namu darbu skaiciu: "; cin >> S.n;
                S.nd.resize(S.n);
                int paz = 0;
                for (int j = 0; j < S.n; j++) {

                    S.nd[j] = distribution(gen);
                    paz += S.nd[j];
                }
                if (S.pasirinkimas == 1) {
                    S.vid = double(paz) / S.n;
                    S.galut = 0.4 * S.vid + 0.6 * S.egz;
                }
                else {
                    S.medi = Mediana(S.nd);
                    S.galut = 0.4 * S.medi + 0.6 * S.egz;
                }
                cout << "*******************************" << endl;
                studentai.push_back(S);
                int sk;
                cout << "0. Baigti" << endl;
                cout << "1. Testi" << endl;
                cin >> sk;
                if (sk == 0) {
                    break;
                }
                else loop = true;
            }
        }
    cout << left << setw(15) << "Pavarde" << setw(15) << "Vardas" << setw(20) << "Galutinis (Vid.)  /" << setw(20) << "Galutinis (Med.)" << endl;
    cout << setfill('-') << setw(68) << "" << setfill(' ') << endl;
    for (const auto& S : studentai) {
       if (S.pasirinkimas == 1) {
            cout << left << setw(15) << S.pavarde << setw(15) << S.vardas << setw(20) << fixed << setprecision(2) << S.galut << endl;
       }
        else {
            cout << left << setw(15) << S.pavarde << setw(15) << S.vardas << setw(20) << " " << setw(20) << fixed << setprecision(2) << S.galut << endl;
        }
    }
}
